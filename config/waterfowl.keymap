/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/* Layers */
#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/{
// ===== COMBOS =====
	combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
            combo_mute {
                timeout-ms = <50>;
                key-positions = <10 20>;
                bindings = <&kp C_MUTE>;
            };
	    combo_sleep {
                timeout-ms = <50>;
                key-positions = <4 5>;
                bindings = <&kp C_PWR>;
            };
		
        }; // Place new combos above this
	
	
// ===== CONDITIONAL LAYERS ===== 
	conditional_layers {
	    compatible = "zmk,conditional-layers";
	    adjust_layer {
	        if-layers = <LOWER RAISE>;
		then-layer = <ADJUST>;
	    };
	};  
	    
	    
// ===== MACROS ===== (DISABLED BECAUSE ENCODERS)
	    macros {
	        email_0: email_0 {
                    compatible = "zmk,behavior-macro";
                    label = "type_email_0";
                    #binding-cells = <0>;
                    wait-ms = <30>;
                    tap-ms = <40>;
                    bindings = <
                        &kp J  &kp D &kp O &kp C &kp K &kp E &kp T &kp T
                        &kp AT_SIGN
                        &kp G &kp M &kp A &kp I &kp L
                        &kp DOT
                        &kp C &kp O &kp M
                    >;
                };
		email_1: email_1 {
                    compatible = "zmk,behavior-macro";
                    label = "type_email_1";
                    #binding-cells = <0>;
                    wait-ms = <30>;
                    tap-ms = <40>;
                    bindings = <
                        &kp D &kp O &kp C &kp K &kp E &kp T &kp T &kp J
                        &kp AT_SIGN
                        &kp B &kp A &kp I &kp S &kp D
                        &kp DOT
                        &kp N &kp E &kp T
                    >;
                };
		email_2: email_2 {
                    compatible = "zmk,behavior-macro";
                    label = "type_email_2";
                    #binding-cells = <0>;
                    wait-ms = <30>;
                    tap-ms = <40>;
                    bindings = <
                        &kp J  &kp D &kp O &kp C &kp K &kp E &kp T &kp T
                        &kp AT_SIGN
                        &kp B &kp A &kp Y &kp C &kp I &kp T &kp Y &kp M &kp I
                        &kp DOT
                        &kp O &kp R &kp G
                    >;
                };
		email_3: email_3 {
                    compatible = "zmk,behavior-macro";
                    label = "type_email_3";
                    #binding-cells = <0>;
                    wait-ms = <30>;
                    tap-ms = <40>;
                    bindings = <
                        &kp J  &kp D &kp O &kp C &kp K &kp E &kp T &kp T &kp N3
                        &kp AT_SIGN
                        &kp G &kp A &kp T &kp E &kp C &kp H
                        &kp DOT
                        &kp E &kp D &kp U
                    >;
                };
                //next_tab: next_tab {
                //    label = "Next Tab";
                //    compatible = "zmk,behavior-macro";
                //    #binding-cells = <0>;
                //    bindings
                //        = <&macro_press &kp RGUI &kp RSHIFT>
                //        , <&macro_tap &kp RBKT>
                //        , <&macro_release RGUI &kp RSHIFT>
                //        ;
                //};
                //prev_tab: prev_tab {
                //    label = "Previous Tab";
                //    compatible = "zmk,behavior-macro";
                //    #binding-cells = <0>;
                //    bindings
                //        = <&macro_press &kp RGUI &kp RSHIFT>
                //        , <&macro_tap &kp LBKT>
                //        , <&macro_release RGUI &kp RSHIFT>
                //        ;
                //    };
                };
	    
	    
// ===== TAP DANCES AND OTHER BEHAVIORS =====
	    behaviors {
	    // ===== DEFINES TAP TERM AND TYPE FOR MT =====
               hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <180>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };	
	    // ===== TAP DANCES =====
                td_0: tap_dance_0 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "ALT_COMMA_MINUS";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&hm RALT COMMA>, <&kp MINUS>;
                };
                td_1: tap_dance_1 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "CONTROL_DOT_EXCLAIM";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&hm RCTRL DOT>, <&kp EXCL>;
                };
                td_2: tap_dance_2 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "FORWARD_SLASH_UNDERSCORE";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&kp FSLH>, <&kp UNDER>;
                };
		//td_3: tap_dance_3 {
                //    compatible = "zmk,behavior-tap-dance";
                //    label = "TAP_DANCE_SHIFT_LEFT";
                //    #binding-cells = <0>;
                //    tapping-term-ms = <200>;
                //    bindings = <&kp LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;
                //};
                td_4: tap_dance_4 {
                    compatible = "zmk,behavior-tap-dance";
                    label = "Q_W_H";
                    #binding-cells = <0>;
                    tapping-term-ms = <200>;
                    bindings = <&hm Q W>, <&kp H>;
                };
            };
	    
	    
// ===== KEYMAP =====
	keymap {
		compatible = "zmk,keymap";
default_layer {
		label = " COLEMAK";
/* BASE
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   Q  |   W  |   F  |   P  |   G  |                      |   J  |   L  |   U  |   Y  |   ;  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   A  |   R  |   S  |   T  |   D  |                      |   H  |   N  |   E  |   I  |   O  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |   Z  |   X  |   C  |   V  |   B  |  | PP  |    | POW |  |   K  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----. 
 *          | CAP |   | SHIFT | MO1 | SPC  |            |  ENTER | BS | RCTR |   | F5  |	
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */
			bindings = <
	&kp Q	  &kp W		 &kp F	     &kp P       &kp G		&kp J	    &kp L	&kp U  &kp Y	 &kp SEMICOLON
	&kp A	  &kp R	         &kp S	     &kp T	 &kp D		&kp H	    &kp N	&kp E  &kp I	 &kp O
	&kp Z	  &hm LCTRL X	 &hm LALT C  &hm LGUI V	 &kp B		&kp K	    &hm RGUI M  &td_0  &td_1   	 &td_2X
	&trans  &kp LEFT_SHIFT &lt 1 TAB   &kp SPACE	 &kp C_PP	&kp F5	    &kp ENTER	&mo 2  &kp BSPC	 &kp C_PWR
			>;

			sensor-bindings = <
				&inc_dec_kp LEFT RIGHT 
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp UP DOWN
				&inc_dec_kp RG(RS(LBKT)) RG(RS(RBKT))
			>;
		};
lower_layer {
            	label = " LOWER";
			bindings = <
	&kp EXCL  &kp AT	   &mt RG(RS(N4)) HASH &kp DLLR	      &kp PRCNT	 &kp CARET  &kp AMPS       &kp STAR	  &none		&kp BSLH
	&kp TAB	  &kp LT	   &kp GT	       &kp COLON      &kp DQT	 &kp HOME   &kp PIPE       &kp LBRC       &kp RBRC      &kp FSLH
	&kp TAB	  &hm LCTRL EQUAL  &hm LALT GRAVE      &hm LGUI SEMI  &kp SQT	 &kp END    &hm RGUI LPAR  &hm RALT LBKT  &hm RCTL RBKT &kp RPAR
	&trans    &trans	   &trans      	       &trans  	      &trans     &trans     &trans  	   &trans   	  &kp DEL  	&trans
			>;

			sensor-bindings = <
				&inc_dec_kp LEFT RIGHT 
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp UP DOWN
				&inc_dec_kp RG(RS(LBKT)) RG(RS(RBKT))
			>;
		};
raise_layer {
            	label = " RAISE";
			bindings = <
	&td_4	    &kp PRCNT	      &kp UP		 &kp UNDER	    &kp EQUAL  &kp PLUS   &kp N7       &kp N8	    &kp N9        &kp STAR
	&kp TAB	    &kp LEFT          &kp DOWN           &kp RIGHT          &kp DOT    &kp MINUS  &kp N4       &kp N5	    &kp N6	  &kp FSLH
	&kp C_PREV  &hm LCTRL C_NEXT  &hm LALT C_BRI_UP	 &hm LGUI C_BRI_DN  &kp COMMA  &kp N0	  &hm RGUI N1  &hm RALT N2  &hm RCTRL N3  &trans
    	&trans      &trans	      &trans      	 &trans  	    &trans     &trans  	  &trans       &trans       &trans  	  &trans
			>;

			sensor-bindings = <
				&inc_dec_kp LEFT RIGHT 
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp UP DOWN
				&inc_dec_kp RG(RS(LBKT)) RG(RS(RBKT))
			>;
		};
		adjust_layer {
            	label = " ADJUST";
			bindings = <
	&bt BT_CLR                      &bt BT_SEL 3 &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0 	&kp F1  &kp F2	&kp F3  &kp F4  &kp F5
	&ext_power EXT_POWER_TOGGLE_CMD	&none	     &kp C_MUTE    &kp ESC	 &kp C_PWR	&kp F6	&kp F7	&kp F8	&kp F9	&kp F10
	&kp C_PWR	                &email_3     &email_2      &email_1	 &email_0       &kp F11 &kp F12	&kp F13 &kp F14 &kp F15
	&trans               		&trans	     &trans        &trans        &kp ESC      	&trans	&trans	&trans 	&trans	&trans
			>;

			sensor-bindings = <
				&inc_dec_kp LEFT RIGHT 
				&inc_dec_kp C_VOL_DN C_VOL_UP
				&inc_dec_kp UP DOWN
				&inc_dec_kp RG(RS(LBKT)) RG(RS(RBKT))
			>;
		};
// ===== POST FILE CLOSING =====


	};
};
